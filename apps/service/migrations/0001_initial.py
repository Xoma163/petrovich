# Generated by Django 5.1.6 on 2025-05-10 21:35

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bot', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлён')),
                ('username', models.CharField(blank=True, max_length=100, null=True, verbose_name='Имя')),
                ('amount', models.CharField(blank=True, max_length=10, verbose_name='Количество')),
                ('currency', models.CharField(blank=True, max_length=30, verbose_name='Валюта')),
                ('message', models.CharField(blank=True, max_length=1000, verbose_name='Сообщение')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Дата')),
            ],
            options={
                'verbose_name': 'Донат',
                'verbose_name_plural': 'Донаты',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлён')),
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Имя')),
                ('value', models.CharField(default='', max_length=5000, null=True, verbose_name='Значение')),
                ('update_datetime', models.DateTimeField(auto_now=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'сервис',
                'verbose_name_plural': 'сервисы',
            },
        ),
        migrations.CreateModel(
            name='SubscribeItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлён')),
                ('channel_id', models.CharField(max_length=100, verbose_name='ID канала')),
                ('channel_title', models.CharField(max_length=100, verbose_name='Название канала')),
                ('playlist_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='ID плейлиста')),
                ('playlist_title',
                 models.CharField(blank=True, max_length=100, null=True, verbose_name='Название плейлиста')),
                ('last_videos_id', models.JSONField(null=True, verbose_name='ID последних видео')),
                ('service', models.SmallIntegerField(blank=True, choices=[(1, 'YouTube'), (4, 'VK')], default=1,
                                                     verbose_name='Сервис')),
            ],
            options={
                'verbose_name': 'Элемент подписки',
                'verbose_name_plural': 'Элементы подписки',
            },
        ),
        migrations.CreateModel(
            name='TimeZone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, null=True, verbose_name='Временная зона UTC')),
            ],
            options={
                'verbose_name': 'таймзона',
                'verbose_name_plural': 'таймзоны',
            },
        ),
        migrations.CreateModel(
            name='HoroscopeMeme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлён')),
                ('name', models.CharField(default='', max_length=1000, verbose_name='Название')),
                ('link', models.CharField(blank=True, default='', max_length=1000, null=True, verbose_name='Ссылка')),
                ('type', models.CharField(blank=True,
                                          choices=[('photo', 'Фото'), ('video', 'Видео'), ('link', 'Ссылка'),
                                                   ('sticker', 'Стикер'), ('gif', 'Гифка'), ('voice', 'Голосовое'),
                                                   ('video_note', 'Кружочек')], max_length=10, verbose_name='Тип')),
                ('uses', models.PositiveIntegerField(default=0, verbose_name='Использований')),
                ('inline_uses', models.PositiveIntegerField(default=0, verbose_name='Рекомендаций в inline')),
                ('approved', models.BooleanField(default=False, verbose_name='Разрешённый')),
                ('for_trusted', models.BooleanField(default=False, verbose_name='Для доверенных пользователей')),
                ('tg_file_id', models.CharField(blank=True, max_length=128, verbose_name='file_id в tg')),
                ('meme_pk', models.PositiveIntegerField(blank=True, default=0, verbose_name='ID мема')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bot.profile',
                                             verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'мем гороскопа',
                'verbose_name_plural': 'мемы гороскопа',
            },
        ),
        migrations.CreateModel(
            name='Horoscope',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(null=True, verbose_name='Дата')),
                ('memes', models.ManyToManyField(to='service.horoscopememe')),
            ],
            options={
                'verbose_name': 'Гороскоп',
                'verbose_name_plural': 'Гороскопы',
            },
        ),
        migrations.CreateModel(
            name='Meme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлён')),
                ('name', models.CharField(default='', max_length=1000, verbose_name='Название')),
                ('link', models.CharField(blank=True, default='', max_length=1000, null=True, verbose_name='Ссылка')),
                ('type', models.CharField(blank=True,
                                          choices=[('photo', 'Фото'), ('video', 'Видео'), ('link', 'Ссылка'),
                                                   ('sticker', 'Стикер'), ('gif', 'Гифка'), ('voice', 'Голосовое'),
                                                   ('video_note', 'Кружочек')], max_length=10, verbose_name='Тип')),
                ('uses', models.PositiveIntegerField(default=0, verbose_name='Использований')),
                ('inline_uses', models.PositiveIntegerField(default=0, verbose_name='Рекомендаций в inline')),
                ('approved', models.BooleanField(default=False, verbose_name='Разрешённый')),
                ('for_trusted', models.BooleanField(default=False, verbose_name='Для доверенных пользователей')),
                ('tg_file_id', models.CharField(blank=True, max_length=128, verbose_name='file_id в tg')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bot.profile',
                                             verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'мем',
                'verbose_name_plural': 'мемы',
            },
        ),
        migrations.CreateModel(
            name='Notify',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлён')),
                ('date', models.DateTimeField(blank=True, null=True, verbose_name='Дата напоминания')),
                ('crontab', models.CharField(blank=True, max_length=100, null=True, verbose_name='Crontab')),
                ('text', models.CharField(blank=True, default='', max_length=1000, verbose_name='Текст/команда')),
                ('mention_sender', models.BooleanField(default=True, verbose_name='Упоминать автора')),
                ('attachments', models.JSONField(blank=True, default=dict, verbose_name='Вложения')),
                ('message_thread_id',
                 models.IntegerField(blank=True, default=None, null=True, verbose_name='message_thread_id')),
                ('chat',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bot.chat',
                                   verbose_name='Чат')),
                ('user',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bot.user',
                                   verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'напоминание',
                'verbose_name_plural': 'напоминания',
            },
        ),
        migrations.CreateModel(
            name='Subscribe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлён')),
                ('message_thread_id',
                 models.IntegerField(blank=True, default=None, null=True, verbose_name='message_thread_id')),
                ('save_to_disk', models.BooleanField(default=False, verbose_name='Сохранять на диск')),
                ('high_resolution', models.BooleanField(default=False, verbose_name='Присылать в высоком разрешении')),
                ('force_cache', models.BooleanField(default=False, verbose_name='Принудительно кэшировать')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='bot.user',
                                             verbose_name='Автор')),
                ('chat',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bot.chat',
                                   verbose_name='Чат')),
                ('subscribe_item',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subscribes',
                                   to='service.subscribeitem', verbose_name='Сервис подписки')),
            ],
            options={
                'verbose_name': 'Подписка',
                'verbose_name_plural': 'Подписки',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('synonyms', models.CharField(max_length=300, verbose_name='Похожие названия')),
                ('lat', models.FloatField(null=True, verbose_name='Широта')),
                ('lon', models.FloatField(null=True, verbose_name='Долгота')),
                ('timezone', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.SET_NULL,
                                               to='service.timezone', verbose_name='Временная зона UTC')),
            ],
            options={
                'verbose_name': 'город',
                'verbose_name_plural': 'города',
            },
        ),
        migrations.CreateModel(
            name='VideoCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлён')),
                ('channel_id', models.CharField(max_length=100, verbose_name='ID канала')),
                ('video_id', models.CharField(max_length=100, null=True, verbose_name='ID видео')),
                ('filename', models.CharField(max_length=1024, verbose_name='Название файла')),
                ('video',
                 models.FileField(blank=True, max_length=1024, upload_to='service/video/', verbose_name='Видео')),
                ('original_url',
                 models.URLField(blank=True, max_length=1024, verbose_name='Ссылка на оригинальное видео')),
            ],
            options={
                'verbose_name': 'Кэш видео',
                'verbose_name_plural': 'Кэши видео',
                'unique_together': {('channel_id', 'video_id')},
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлён')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('chat',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.chat', verbose_name='Чат')),
                ('users', models.ManyToManyField(blank=True, to='bot.profile', verbose_name='Пользователи')),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
                'unique_together': {('name', 'chat')},
            },
        ),
    ]
