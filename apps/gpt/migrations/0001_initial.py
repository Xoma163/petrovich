# Generated by Django 5.1.6 on 2025-05-10 21:35

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bot', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('chatgpt', 'CHATGPT'), ('claude', 'CLAUDE'), ('grok', 'GROK')],
                                          max_length=32, unique=True, verbose_name='Провайдер')),
            ],
            options={
                'verbose_name': 'Провайдер',
                'verbose_name_plural': 'Провайдеры',
            },
        ),
        migrations.CreateModel(
            name='ImageEditModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название модели в API')),
                ('verbose_name', models.CharField(max_length=256, verbose_name='Название модели для пользователя')),
                ('is_default', models.BooleanField(default=False)),
                ('width', models.PositiveSmallIntegerField(verbose_name='Ширина изображения')),
                ('height', models.PositiveSmallIntegerField(verbose_name='Высота изображения')),
                ('image_cost', models.DecimalField(decimal_places=4, max_digits=8,
                                                   verbose_name='Стоимость редактирования одного изображения')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gpt.provider',
                                               verbose_name='Провайдер')),
            ],
            options={
                'verbose_name': 'Модель редактирования изображений',
                'verbose_name_plural': 'Модели редактирования изображений',
            },
        ),
        migrations.CreateModel(
            name='ImageDrawModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название модели в API')),
                ('verbose_name', models.CharField(max_length=256, verbose_name='Название модели для пользователя')),
                ('is_default', models.BooleanField(default=False)),
                ('width', models.PositiveSmallIntegerField(verbose_name='Ширина изображения')),
                ('height', models.PositiveSmallIntegerField(verbose_name='Высота изображения')),
                ('image_cost', models.DecimalField(decimal_places=4, max_digits=8,
                                                   verbose_name='Стоимость генерации одного изображения')),
                ('quality', models.CharField(max_length=32, verbose_name='Название качества модели в API')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gpt.provider',
                                               verbose_name='Провайдер')),
            ],
            options={
                'verbose_name': 'Модель генерации изображений',
                'verbose_name_plural': 'Модели генерации изображений',
            },
        ),
        migrations.CreateModel(
            name='CompletionsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название модели в API')),
                ('verbose_name', models.CharField(max_length=256, verbose_name='Название модели для пользователя')),
                ('is_default', models.BooleanField(default=False)),
                ('prompt_1m_token_cost', models.DecimalField(decimal_places=4, max_digits=8,
                                                             verbose_name='Стоимость за 1млн. входных токенов')),
                ('completion_1m_token_cost', models.DecimalField(decimal_places=4, max_digits=8,
                                                                 verbose_name='Стоимость за 1млн. выходных токенов')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gpt.provider',
                                               verbose_name='Провайдер')),
            ],
            options={
                'verbose_name': 'Модель обработки текста',
                'verbose_name_plural': 'Модели обработки текста',
            },
        ),
        migrations.CreateModel(
            name='Usage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлён')),
                ('cost', models.DecimalField(decimal_places=6, max_digits=10, verbose_name='Стоимость запроса')),
                ('model_name', models.CharField(blank=True, max_length=256, verbose_name='Название модели')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='bot.profile',
                                             verbose_name='Пользователь')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gpt.provider',
                                               verbose_name='Провайдер')),
            ],
            options={
                'verbose_name': 'Использование',
                'verbose_name_plural': 'Использования',
            },
        ),
        migrations.CreateModel(
            name='VisionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название модели в API')),
                ('verbose_name', models.CharField(max_length=256, verbose_name='Название модели для пользователя')),
                ('is_default', models.BooleanField(default=False)),
                ('prompt_1m_token_cost', models.DecimalField(decimal_places=4, max_digits=8,
                                                             verbose_name='Стоимость за 1млн. входных токенов')),
                ('completion_1m_token_cost', models.DecimalField(decimal_places=4, max_digits=8,
                                                                 verbose_name='Стоимость за 1млн. выходных токенов')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gpt.provider',
                                               verbose_name='Провайдер')),
            ],
            options={
                'verbose_name': 'Модель обработки изображений',
                'verbose_name_plural': 'Модели обработки изображений',
            },
        ),
        migrations.CreateModel(
            name='VoiceRecognitionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название модели в API')),
                ('verbose_name', models.CharField(max_length=256, verbose_name='Название модели для пользователя')),
                ('is_default', models.BooleanField(default=False)),
                ('voice_recognition_1_min_cost', models.DecimalField(decimal_places=4, max_digits=8,
                                                                     verbose_name='Стоимость за 1 минуту распознования голоса')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gpt.provider',
                                               verbose_name='Провайдер')),
            ],
            options={
                'verbose_name': 'Модель распознования голоса',
                'verbose_name_plural': 'Модели распознования голоса',
            },
        ),
        migrations.CreateModel(
            name='ProfileGPTSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлён')),
                ('key', models.CharField(blank=True, max_length=1024, verbose_name='Ключ провайдера')),
                ('completions_model',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                   to='gpt.completionsmodel', verbose_name='Модель обработки текста')),
                ('image_draw_model',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                   to='gpt.imagedrawmodel', verbose_name='Модель рисования изображений')),
                ('image_edit_model',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                   to='gpt.imageeditmodel', verbose_name='Модель редактирования изображений')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gpt_settings',
                                              to='bot.profile', verbose_name='Профиль')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gpt.provider',
                                               verbose_name='Провайдер')),
                ('vision_model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                                   to='gpt.visionmodel', verbose_name='Модель обработки изображений')),
                ('voice_recognition_model',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                   to='gpt.voicerecognitionmodel', verbose_name='Модель распознования голоса')),
            ],
            options={
                'verbose_name': 'Настройка пользователя',
                'verbose_name_plural': 'Настройки пользователя',
            },
        ),
        migrations.CreateModel(
            name='Preprompt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлён')),
                ('text', models.TextField(blank=True, verbose_name='Текст препромпта')),
                ('author',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bot.profile',
                                   verbose_name='Пользователь')),
                ('chat',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bot.chat',
                                   verbose_name='Чат')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gpt.provider',
                                               verbose_name='Провайдер')),
            ],
            options={
                'verbose_name': 'Препромпт',
                'verbose_name_plural': 'Препромпты',
                'unique_together': {('author', 'chat', 'provider')},
            },
        ),
        migrations.AddConstraint(
            model_name='imageeditmodel',
            constraint=models.UniqueConstraint(fields=('name', 'width', 'height'),
                                               name='unique_name_width_height_image_edit'),
        ),
        migrations.AddConstraint(
            model_name='imagedrawmodel',
            constraint=models.UniqueConstraint(fields=('name', 'width', 'height', 'quality'),
                                               name='unique_name_width_height_quality_img_draw'),
        ),
        migrations.AddConstraint(
            model_name='completionsmodel',
            constraint=models.UniqueConstraint(fields=('name',), name='unique_name_completion_model'),
        ),
        migrations.AddConstraint(
            model_name='visionmodel',
            constraint=models.UniqueConstraint(fields=('name',), name='unique_name_vision_model'),
        ),
        migrations.AddConstraint(
            model_name='voicerecognitionmodel',
            constraint=models.UniqueConstraint(fields=('name',), name='unique_name_voice_recognition_model'),
        ),
    ]
